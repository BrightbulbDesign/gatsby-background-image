// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`activatePictureRef() with image array should return imageRef array with fixed Array Mock 1`] = `
Array [
  <img
    src="test_fixed_image.jpg"
    srcset="some srcSet"
  />,
  <img
    src="test_fixed_image.jpg"
    srcset="some srcSet"
  />,
]
`;

exports[`activatePictureRef() with image array should return imageRef array with fluid Array Mock 1`] = `
Array [
  <img
    src="test_fluid_image.jpg"
    srcset="some srcSet"
  />,
  <img
    src="test_fluid_image.jpg"
    srcset="some srcSet"
  />,
]
`;

exports[`noscriptImg() / activatePictureRef() without HTMLPictureElement (IE11) activatePictureRef() should still create an imageRef 1`] = `
<img
  src="test_fluid_image.jpg"
  srcset="some srcSet"
/>
`;

exports[`noscriptImg() / activatePictureRef() without HTMLPictureElement (IE11) should return default noscriptImg without <picture /> on {} 1`] = `
<div>
  &lt;img src="" alt="" style="position:absolute;top:0;left:0;z-index:-1;transition:opacity 0.5s;transition-delay:0.5s;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center"/&gt;
</div>
`;

exports[`noscriptImg() should return default noscriptImg on {} 1`] = `
<div>
  &lt;picture&gt;&lt;img src="" alt="" style="position:absolute;top:0;left:0;z-index:-1;transition:opacity 0.5s;transition-delay:0.5s;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center"/&gt;&lt;/picture&gt;
</div>
`;

exports[`noscriptImg() should return noscriptImg with opacity & transitionDelay & crossOrigin 1`] = `
<div>
  &lt;picture&gt;&lt;img src="" alt="" crossorigin="anonymous" style="position:absolute;top:0;left:0;z-index:-1;transition:opacity 0.5s;transition-delay:100;opacity:0.99;width:100%;height:100%;object-fit:cover;object-position:center"/&gt;&lt;/picture&gt;
</div>
`;

exports[`switchImageSettings() should return settings from fixed array 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "string_of_base64,imageString",
  "nextImage": "url(test.webp),url(test.webp)",
  "nextImageArray": Array [
    "url(test.webp)",
    "url(test.webp)",
  ],
}
`;

exports[`switchImageSettings() should return settings from fixed array without currentSrc 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "",
  "nextImage": "url(test.jpg),url(test.jpg)",
  "nextImageArray": Array [
    "url(test.jpg)",
    "url(test.jpg)",
  ],
}
`;

exports[`switchImageSettings() should return settings from fixed with set bgImage 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "string_of_base64",
  "nextImage": "url(string_of_base64)",
}
`;

exports[`switchImageSettings() should return settings from fixed with set bgImage 2`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "string_of_base64",
  "nextImage": "url(string_of_base64)",
}
`;

exports[`switchImageSettings() should return settings from fluid with empty bgImage 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "",
  "nextImage": "url(string_of_base64)",
}
`;

exports[`switchImageSettings() should return settings from fluid with set bgImage and base64 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "string_of_base64",
  "nextImage": "url(test.webp)",
}
`;

exports[`switchImageSettings() should return settings from fluid with set bgImage and tracedSVG 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "test_tracedSVG.svg",
  "nextImage": "url(test.webp)",
}
`;

exports[`switchImageSettings() should return settings from fluid with set bgImage without base64 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "",
  "nextImage": "url(test.webp)",
}
`;

exports[`switchImageSettings() should return settings from fluid without src 1`] = `
Object {
  "afterOpacity": 1,
  "lastImage": "",
  "nextImage": "url(test.webp)",
}
`;
